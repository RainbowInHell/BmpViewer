# BmpViewer
Program for processing bmp files with 24-bit color depth with "sepia", "negative" filters, adding "damaged" pixels to the image, correction of "damaged" pixels in the image

Description:
В данной работе главной целью была обработка bmp изображений с 24-хбитной глубиной цвета. Под обработкой понимается приминение
фильтров (сепия, негатив) а так же загрязнение изображения с помощью черных и белых пикселей. Для реализации этих возможностей, сперва мне нужно было поместить изображение
в массив (то есть сделать массив пикселей). Для этого мне понадобились структуры BITMAPFILEHEADER и BITMAPINFOHEADER а так же
хардкорная работа с памятью через maloc. Говоря об алгоритмах этих возможностей, могу сказать что для фильтров достаточно было
поиграться со значениями пикселей и подогнать под нужный вариант, потому что как таковых 100% алгоритмов для этих фильтров я не нашел.
Теперь про загрязнение и очищение. Чтобы испортить изображение я придумал просто их рандомное расположение на изображении,
с возможность выбора диапазона, что означает более сильное/слабое загрязнение. Для чистки у меня было два подхода. Сперва я сделал
алгоритм для чисти пикселей которые находятся внутри, это значит что есть пиксель вокруг которого со всех сторон еще 8 пикселей.
Дабы убедиться что пиксель черный или белый я проверял его глубину (если 0 - черный, если 255 - белый) потом я складывал значение
пикселей которые вокруг того, который нужно исправить и находил среднее арифметическое, которое присваивается исправляемому пикселю.
С пикселями по бокам и в углах принцип такой же, только у пикселей по бокам 5 соседей, а у пикселей в углах 3.

Так же в моей работе было применено маршалирование. Две функции взяты с оффициального сайта microsoft. Одна нужна была для преобразования
из String^ в string, вторая же из String^ в const char*.

Для локализации мне пришлось рыться в просторах зарубежного ютуба, дабы найти интересный способ ее осуществления, потому что мне было
не интересно делать локализацию через флажки в файле. Все что я смог найти - это локализацию в с#, но я удачно смог ее переделать под
c++ ипользуя Xml классы и ConfigurationManager для обновления настроек локализации на всех формах.