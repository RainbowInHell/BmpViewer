<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BadFile" xml:space="preserve">
    <value>Oops, there seems to be something wrong with the file! Restart the application and try again!</value>
  </data>
  <data name="Er" xml:space="preserve">
    <value>Error!</value>
  </data>
  <data name="Expansion" xml:space="preserve">
    <value>Expanding your image is not bmp!</value>
  </data>
  <data name="FileError" xml:space="preserve">
    <value />
  </data>
  <data name="Format" xml:space="preserve">
    <value>Your image format is not Format24bppRgb!</value>
  </data>
  <data name="FreeFile" xml:space="preserve">
    <value>File is empty!</value>
  </data>
  <data name="FreeRich" xml:space="preserve">
    <value>RichBox is empty!</value>
  </data>
  <data name="FromTo" xml:space="preserve">
    <value>Fields From and To are required!</value>
  </data>
  <data name="GG" xml:space="preserve">
    <value>Critical error!</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Information about the program!</value>
  </data>
  <data name="Info1" xml:space="preserve">
    <value>This program is designed to process BMP images with 24-bit color depth.</value>
  </data>
  <data name="Invalid" xml:space="preserve">
    <value>Invalid input</value>
  </data>
  <data name="Lang" xml:space="preserve">
    <value>Restart the application to install the language.</value>
  </data>
  <data name="LoginFree" xml:space="preserve">
    <value>The login string cannot be empty!</value>
  </data>
  <data name="NoDirty" xml:space="preserve">
    <value>You have not spoiled the photo yet in order to correct it!</value>
  </data>
  <data name="NoMemory" xml:space="preserve">
    <value>No memory!</value>
  </data>
  <data name="PassFree" xml:space="preserve">
    <value>Password string cannot be empty!</value>
  </data>
  <data name="PassLenght" xml:space="preserve">
    <value>The length of the password cannot be less than 5 or more than 13 characters</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>Path for the processed file</value>
  </data>
  <data name="PhotoChoose" xml:space="preserve">
    <value>Choose a photo!</value>
  </data>
  <data name="Reg" xml:space="preserve">
    <value>You are registered!</value>
  </data>
  <data name="SamePerson" xml:space="preserve">
    <value>This user already exists!</value>
  </data>
  <data name="Smth" xml:space="preserve">
    <value>Check the correctness of the login and password!</value>
  </data>
  <data name="Spravka" xml:space="preserve">
    <value>1. Exit the program. 2. Information about the program.3. Help for using the program.4. Use this button to apply the Negative filter to any image you choose in PictureBox.5. If you have previously damaged the image with black pixels, then this button will allow you to correct the image and select it at the path you specified to view the results.6. Thanks to this button, you can ruin your image with black pixels.7. Required input field.The value From-sets the first number to randomize the spread of dirty pixels.8. Required input field.The value To-sets the second number for randomizing the spread of dirty pixels.9. Thanks to this button, you can ruin your image with white pixels.10. If you have previously damaged the image with white pixels, then this button will allow you to correct the image and select it at the path you specified to view the results.11. Use this button to apply a Sepia filter to any image you choose in PictureBox. 12. The button for a full restart of the application(When you click it when you restart the program, you will be in the atorization window).13. Allows you to select any available image from the one on your computer via the file explorer.14. Closes the image that is in the left window.15. Allows you to select the processed image along the path that will be reported to you after any processing.16. View all images in the selected folder in the left direction.17. View all images in the selected folder in the right direction.18. Closes the image that is located in the right window.</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome,</value>
  </data>
</root>